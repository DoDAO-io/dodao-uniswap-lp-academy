{
  "categories": [],
  "content": "What are Ticks and Ranges in Uniswap V3",
  "created": "2023-04-21T18:38:30.790Z",
  "guideIntegrations": {
    "discordRoleIds": []
  },
  "guideType": "course",
  "key": "liquidity-pool-details-uniswap",
  "name": "Liquidity Pool Details",
  "publishStatus": "Live",
  "showIncorrectOnCompletion": true,
  "steps": [
    {
      "content": "### Uniswap V2 - Liquidity Graph\nIn Uniswap v2, liquidity providers (LPs) deposit an equal value of two tokens (e.g., ETH and DAI) to create a liquidity pool. In our example, the pool consists of 100 ETH and 150,000 DAI. The liquidity in Uniswap v2 is spread uniformly across the entire price range, from 0 to infinity. This means that liquidity is available for trading at all price levels.\n\nWhen a user trades in the pool, the price is determined by the current ratio of the two assets in the pool, following the constant product formula (x * y = k). In our example, the initial ratio is 100 ETH * 150,000 DAI = 15,000,000.\n\n<div align=\"center\">\n<img src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap-eth-1/Guide/liquidity-pool-details-uniswap/1681912476448_07_v2_liquidity_chart.png\" />\n</div>\n\n### Uniswap V3 - Liquidity Graph\nUniswap v3 introduces the concept of concentrated liquidity, which allows liquidity providers to specify a price range for their liquidity. Instead of providing liquidity across the entire price spectrum, LPs can choose custom price ranges where they believe most of the trading will happen. This allows them to earn more fees for a given amount of deposited capital.\n\nIn our example, if an LP believes that the ETH/DAI price will stay between 1,400 DAI and 1,600 DAI, they can deposit their liquidity within this range. This effectively concentrates their liquidity around the expected price, which can lead to more efficient capital usage and potentially higher returns.\n\n<div align=\"center\">\n<img src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap-eth-1/Guide/liquidity-pool-details-uniswap/1681912741645_07_v3_liquidity_chart.png\" />\n</div>\n\nTo sum up, in Uniswap v2, liquidity is spread uniformly across the entire price range, while in Uniswap v3, liquidity providers can concentrate their liquidity within custom price ranges, which can lead to more efficient capital usage and potentially higher returns.\n\n\n\n\n",
      "name": "Liquidity Graph",
      "stepItems": [],
      "uuid": "a8421242-16c4-4e2b-aafc-0d93be135acc"
    },
    {
      "content": "## Real and Virtual Reserves\nIn Uniswap V3, the concepts of real and virtual reserves are used to manage liquidity within a pool. Let's break down these terms in simple words and provide an example to illustrate their roles.\n\n**Real reserves**: Real reserves are the actual amounts of the two tokens held in a liquidity pool. When liquidity providers (LPs) add or remove liquidity, they directly affect the real reserves. The real reserves are used to calculate the exchange rate between the two tokens in a pool, following the constant product formula (x * y = k).\n\n**Virtual reserves**: Virtual reserves are a mathematical concept used to determine how much liquidity is available for trading within the current price range. They are not actual tokens held in the pool but rather a representation of the liquidity that is active within a specific price range. Virtual reserves help calculate the effective exchange rate and slippage for trades within the given range.\n\n<div align=\"center\">\n<img src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap-eth-1/Guide/liquidity-pool-details-uniswap/1681926781696_09_real_reserves.png\" />\n</div>\n\n### Example\nLet's consider another example using the Uniswap V3 ETH/USDC pool. In this case, we'll use specific real reserve amounts and simulate adding liquidity within a certain price range.\n\nAssume the ETH/USDC pool has the following real reserves:\n\n```\nReal reserves: 50 ETH and 100,000 USDC (Initial Value)\n```\nNow, a liquidity provider (LP) wants to add liquidity within the price range of 1,800 USDC/ETH to 2,200 USDC/ETH. They decide to add 10 ETH and 20,000 USDC within this range.\n\nAfter adding the liquidity, the pool's real reserves will be updated:\n\n```\nReal reserves: 60 ETH (50 + 10) and 120,000 USDC (100,000 + 20,000)\n```\n\nHowever, only the added liquidity by the LP falls within the specified price range (1,800 to 2,200 USDC/ETH). Therefore:\n```\nVirtual reserves: 10 ETH and 20,000 USDC (the liquidity active within the price range)\n```\nWhen a user wants to swap tokens within the 1,800 to 2,200 USDC/ETH price range, the virtual reserves (10 ETH and 20,000 USDC) will be used to determine the exchange rate and potential slippage for their trade. Trades outside of this price range will not have access to the virtual reserves and may experience higher slippage or fail due to lack of liquidity.\n\nThis example demonstrates the difference between real and virtual reserves in Uniswap V3. Real reserves are the actual token amounts held in the pool, while virtual reserves represent the liquidity available within a specific price range for trading.",
      "name": "Real Reserves Graph",
      "stepItems": [],
      "uuid": "1a443116-13c7-4830-94ce-e345fd0b92c4"
    },
    {
      "content": "### Ticks in Uniswap V3\nIn Uniswap V3, a tick is a discrete value that represents a specific price point within the price range of a liquidity pool. Ticks are used to divide the price range into equally sized intervals, and they help determine how liquidity is distributed across the pool.\n\nEach tick is associated with a unique tick index, which is an integer value. The tick index can be positive, negative, or zero, and the relationship between tick indexes and price is logarithmic. In Uniswap V3, the price at a given tick is determined by the formula: price = 1.0001^(tick index).\n\nAn important concept related to ticks is the \"tick spacing,\" which is the difference between two adjacent tick indexes. The tick spacing depends on the liquidity pool's fee tier, and it can be 10, 60, or 200. This means that liquidity providers (LPs) can only add or remove liquidity at price levels that correspond to the tick spacing.\n\n### Example\nLet's consider a Uniswap V3 liquidity pool for the token pair ETH/DAI with a tick spacing of 10. Suppose a liquidity provider wants to add liquidity within the price range of 1000 DAI/ETH and 2000 DAI/ETH. To determine the ticks for this range:\n\n1. Calculate the tick index for the lower price bound (1000 DAI/ETH):\ntick_lower = log(1000) / log(1.0001) ‚âà 6909.57, rounded down to 6900 (nearest multiple of 10)\n2. Calculate the tick index for the upper price bound (2000 DAI/ETH):\ntick_upper = log(2000) / log(1.0001) ‚âà 13819.14, rounded down to 13810 (nearest multiple of 10)\n\nThe liquidity provider would then add liquidity between tick 6900 and tick 13810. As the price moves between these ticks, the liquidity provider would earn fees proportional to the amount of liquidity provided and the volume of trades occurring within this range.\n",
      "name": "What is a Tick?",
      "stepItems": [],
      "uuid": "92dd24dd-dc3f-4780-99f5-039abc822b17"
    },
    {
      "content": "### Price Graph with Ticks\n<div align=\"center\">\n<img style=\"max-height:400px;margin-bottom:30px\" src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap-eth-1/Guide/liquidity-pool-details-uniswap/1682099529192_08_graphs_with_tciks_0.png\"/>\n</div>\n\n\n\n### When traders buy \"token-0\"\n\n<div align=\"center\">\n<img style=\"max-height:400px;margin-bottom:30px\" \n src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap-eth-1/Guide/liquidity-pool-details-uniswap/1682099557308_08_graphs_with_tciks_1.png\" />\n</div>\n\n### When traders buy \"token-1\"\n<div align=\"center\">\n<img style=\"max-height:400px;margin-bottom:30px\"  src=\"https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap-eth-1/Guide/liquidity-pool-details-uniswap/1682099579132_08_graphs_with_tciks_2.png\" />\n</div>\n",
      "name": "Price Graph with Ticks",
      "stepItems": [],
      "uuid": "a22bf566-4e7b-44c5-bda1-390176f395d6"
    },
    {
      "content": "",
      "name": "Your Info",
      "stepItems": [
        {
          "label": "Nickname",
          "required": true,
          "type": "PublicShortInput",
          "uuid": "07d8d83c-6014-499c-9a85-1f4f66a1d50c"
        }
      ],
      "uuid": "f6e88272-f3b2-451c-a85d-629747fc87d2"
    },
    {
      "content": "\n\n. Uniswap V3 liquidity providers specify the price range\n[ùëÜùëô, ùëÜùë¢] in which they wish to supply liquidity (cf. Figure 2b). Their\nliquidity then only supports trading within this price range. Thus,\nUniswap V3 has an increased liquidity concentration around the\ncurrent price and thereby increases the market‚Äôs capital efficiency.\nWe note that liquidity providers can only choose the price boundaries of their liquidity position from a predefined set of the pool‚Äôs\ninitialized ticks. There is a tick at every integer exponent of 1.0001,\nand the price of tick ùëñ (ùëñ ‚àà Z) is given by\n\nùëÜ (ùëñ) = 1.0001ùëñ\n.\nConsequently, each tick is 0.01% (one basis points (bps)) away from\neach neighboring tick. Not every tick can be initialized in a pool,\ninstead, only ticks with indexes divisible by the pool‚Äôs predefined\ntick spacing (ùë°ùë† ) can be initialized. Figure 2c shows a schematic\nrepresentation of a liquidity allocation across a liquidity pool‚Äôs\nprice range. The liquidity is no longer constant across the entire\nprice range, instead, only between the pool‚Äôs initialized ticks.\nUniswap V3 utilizes the concept of virtual reserves, adjusted\nlarger reserves, to describe the pool‚Äôs behavior between two adjacent ticks ùëáùëô and ùëáùë¢. The virtual reserves act as if the liquidity\nin the entire pool matches that of the current price range. Thus,\nthe virtual reserves of the current price range are a transformation\nof the range‚Äôs real reserves that allow for the application of the\nconstant product formula. In the following we consider a pool with\nreserves ùë•real and ùë¶real between two adjacent ticks. The price range\nbetween ticks ùëáùëô and ùëáùë¢ is given by [ùëÜùëô\n, ùëÜùë¢]. Instead of ensuring\nthat the product between the reserves stays constant, the protocol ensures that the product of the virtual reserves ùë• and ùë¶ stays\nconstant, i.e.,\n\n```\nùë• ¬∑ ùë¶ = ùêø^2\n```\n\nwhere ùêø the liquidity reserved in between ticks ùëáùëô and ùëáùë¢ [14].\nFurther, the marginal price is given by ùëÜ = ùë¶/ùë•. The following\nrelationship then holds between the virtual reserves, liquidity, and\nmarginal price:\n\nùë• = ùêø‚àö ùëÜ\n\nùë¶ = ùêø‚àöùëÜ.\n\nThus, the virtual reserves behave according to the constant product\nprice curve as shown in Figure 1. Similarly, the real reserves can be\nobtained as follows:\n\nùë•real = ùë• ‚àí ùêø‚àöùëÜùë¢ = ùêø‚àöùëÜ ‚àí ùêø‚àöùëÜùë¢\n\nùë¶real = ùë¶ ‚àí ùêø‚àöÔ∏ÅùëÜùëô = ùêø‚àöùëÜ ‚àí ùêø‚àöÔ∏ÅùëÜùëô.\n\nObserve that the pool only needs to maintain sufficient reserves to\nsupport trading within the price boundaries [ùëÜùëô, ùëÜùë¢]. Thus, the real\nreserves of ùëã-token shrink as the value of ùëã in terms of ùëå increases\nand are fully depleted at the upper price boundary ùëÜùë¢. The opposite\nholds for the real reserves of ùëå-token.\n\nhttps://blog.woodstockfund.com/2022/10/10/uniswap-v3-interesting-facts/",
      "name": "Rough Work",
      "stepItems": [],
      "uuid": "0ef2865a-f456-4a52-9f19-8c288dcac086"
    }
  ],
  "thumbnail": "https://d31h13bdjwgzxs.cloudfront.net/academy/uniswap/uniswap_pool_details.png",
  "uuid": "liquidity-pool-details-uniswap"
}